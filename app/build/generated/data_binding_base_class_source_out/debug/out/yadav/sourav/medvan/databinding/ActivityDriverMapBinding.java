// Generated by view binder compiler. Do not edit!
package yadav.sourav.medvan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import yadav.sourav.medvan.R;

public final class ActivityDriverMapBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView customerDestination;

  @NonNull
  public final LinearLayout customerInfo;

  @NonNull
  public final TextView customerName;

  @NonNull
  public final TextView customerPhone;

  @NonNull
  public final Button history;

  @NonNull
  public final Button logout;

  @NonNull
  public final Button rideStatus;

  @NonNull
  public final Button settings;

  @NonNull
  public final Switch workingSwitch;

  private ActivityDriverMapBinding(@NonNull FrameLayout rootView,
      @NonNull TextView customerDestination, @NonNull LinearLayout customerInfo,
      @NonNull TextView customerName, @NonNull TextView customerPhone, @NonNull Button history,
      @NonNull Button logout, @NonNull Button rideStatus, @NonNull Button settings,
      @NonNull Switch workingSwitch) {
    this.rootView = rootView;
    this.customerDestination = customerDestination;
    this.customerInfo = customerInfo;
    this.customerName = customerName;
    this.customerPhone = customerPhone;
    this.history = history;
    this.logout = logout;
    this.rideStatus = rideStatus;
    this.settings = settings;
    this.workingSwitch = workingSwitch;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDriverMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDriverMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_driver_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDriverMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.customerDestination;
      TextView customerDestination = ViewBindings.findChildViewById(rootView, id);
      if (customerDestination == null) {
        break missingId;
      }

      id = R.id.customerInfo;
      LinearLayout customerInfo = ViewBindings.findChildViewById(rootView, id);
      if (customerInfo == null) {
        break missingId;
      }

      id = R.id.customerName;
      TextView customerName = ViewBindings.findChildViewById(rootView, id);
      if (customerName == null) {
        break missingId;
      }

      id = R.id.customerPhone;
      TextView customerPhone = ViewBindings.findChildViewById(rootView, id);
      if (customerPhone == null) {
        break missingId;
      }

      id = R.id.history;
      Button history = ViewBindings.findChildViewById(rootView, id);
      if (history == null) {
        break missingId;
      }

      id = R.id.logout;
      Button logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.rideStatus;
      Button rideStatus = ViewBindings.findChildViewById(rootView, id);
      if (rideStatus == null) {
        break missingId;
      }

      id = R.id.settings;
      Button settings = ViewBindings.findChildViewById(rootView, id);
      if (settings == null) {
        break missingId;
      }

      id = R.id.workingSwitch;
      Switch workingSwitch = ViewBindings.findChildViewById(rootView, id);
      if (workingSwitch == null) {
        break missingId;
      }

      return new ActivityDriverMapBinding((FrameLayout) rootView, customerDestination, customerInfo,
          customerName, customerPhone, history, logout, rideStatus, settings, workingSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
